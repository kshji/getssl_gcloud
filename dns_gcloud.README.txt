# getssl using Google Cloud DNS
# https://github.com/kshji/getssl_gcloud
# ver 2025-09-13

# You need install gcloud command
# https://cloud.google.com/sdk/docs/install
# if using linux server without desktop (x-term):
#     unset DISPLAY
#
# gcloud init
#
# Need also Google Cloud Console Service Account
# https://console.cloud.google.com/projectselector2/iam-admin/serviceaccounts 
# - need Permissions role "DNS Zone Editor"
# result is JSON keyfile
#
# Service Account  account=email, usually something like  xxx@xxx.gserviceaccount.com
#
# example using keyfile
gcloud auth activate-service-account xxx@xxx.gserviceaccount.com --key-file=/somepath/PROJECT_ID_xxxxx.json

# after auth you can use gcloud dns services

# get zones from your Google Cloud DNS project
gcloud dns managed-zones list --project=PROJECT_ID

# more gcloud dns commands:
# https://cloud.google.com/sdk/gcloud/reference/dns

# Example list domain TXT records
gcloud dns record-sets list --zone=ZONEID --name="example.com." --type="TXT"
# ZONEID usually ex. for domain example.com is examplecom
#
###############################################################
# getssl configuration DNS validation using Google Cloud DNS
# example.com/getssl.cfg

   CA="https://acme-v02.api.letsencrypt.org"
   SANS="*.example.com"
   # Set this to "true" to enable DNS validation
   VALIDATE_VIA_DNS="true"             
   # Google Cloud DNS setup
   #  Use this command/script to add the challenge token to the DNS entries for the domain
   DNS_ADD_COMMAND="/somepath/dns_add_gcloud.sh"              
   # Use this command/script to remove the challenge token from the DNS entries for the domain
   DNS_DEL_COMMAND="/somepath/dns_del_gcloud.sh"              
   
   # example.com
   export GCLOUD_ZONE="examplecom"          # Google Cloud DNS zoneid
   export GCLOUD_PROJECTID="mydnsproject"   # Google Cloud projectid
   export GCLOUD_ACCOUNT="someuser@mydnsproject.iam.gserviceaccount.com"  # Service Account
   export GCLOUD_KEYFILE="/somepath/mydnsprojectSomeid.json"

#

